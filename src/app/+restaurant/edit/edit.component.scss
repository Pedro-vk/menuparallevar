@import '../../styles/index';

:host {
  height: 100%;
}

.container {
  height: 100%;

  &--hidden {
    display: none;
  }
}

.content {
  min-height: $size---content;
}

.footer-message {
  background: gc(bgdark);
}

.footer {
  @include shadow(2, $reverse: true);

  height: $size---footer;
  position: sticky;
  bottom: 0;
  background: gc(bg);
  border-top: 1px solid gc(border);
  padding: $size---padding;
}

.sticky-header {
  position: sticky;
  background: gc(bg);
  top: 32px;
  z-index: 2;
  border-bottom: 1px solid gc(border);
  margin: 0 (-$size---padding);
  padding-right: $size---padding;
  padding-left: $size---padding;
}

.price-input {
  width: 90px;
  text-align: right;
  padding: 0;
  padding-left: $size---padding / 2;
}

.dish {
  position: relative;
  margin: 0 $size---padding / -2;
  height: 40px;

  &__input {
    @include transition(fast);

    width: 100%;
    height: 100%;

    padding: 0;
    padding-left: $size---padding / 2;
    padding-right: 40px + $size---padding;
    border-radius: 4px;

    &:focus {
      background: gc(brand, 0.08);
    }

    @include placeholder {
      opacity: 0.24;
      font-style: italic;
    }
  }
  &__icon {
    @include transition(fast);

    position: absolute;
    right: 0;
    top: 0;

    &--focus {
      pointer-events: none;
      opacity: 0;
    }
  }
  &__input:focus:not(:placeholder-shown) ~ &__icon {
    pointer-events: none;
    opacity: 0;
  }
  &__input:focus:not(:placeholder-shown) ~ &__icon--focus {
    opacity: 1;
    pointer-events: initial;
  }
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  min-height: 100%;
  width: 100%;
  background: gc(bg);
  display: none;
  flex-direction: column;
  z-index: 7;

  &--visible {
    display: flex;
  }

  &-content {
    flex: 1;
  }
  &-header {
    padding: $size---padding;
    border-bottom: 1px solid gc(border);
    position: sticky;
    display: flex;
    justify-content: space-between;
    top: 0;
    align-items: center;
    height: $size---footer + 1px;
    background: gc(bg);

    &__title {
      flex: 1;
      text-align: center;
    }
  }
  &-close {
    position: absolute;
    top: $size---padding + 20px;
    left: $size---padding + 20px;
    transform: translateX(-50%) translateY(-50%);
  }
}

.prefix {
  display: flex;
  align-items: baseline;

  span {
    padding-right: $size---padding / 2;
    display: block;
  }
}

.emoji {
  @include ui-button-clickable(2);
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(64px + 20px, 1fr));
  grid-auto-rows: 1fr;

  &:before{
    content: '';
    width: 0;
    padding-bottom: 100%;
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }

  &__cell {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  & > &__cell:first-child {
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }
}

.schedule,
.input {
  margin-top: $size---padding / 4;
}

// Schedule component
.schedule {
  height: 40px;
  padding: $size---padding / 4 0;
  border-radius: $size---padding / 2;
  border: 1px solid gc(c2);
  display: flex;
  align-items: stretch;

  &__button {
    @include transition(fast);
    @include ui-text(upper);

    background: gc(bg);
    color: gc(c3);
    border-radius: $size---padding / 4;
    margin: 0 $size---padding / 4;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    cursor: pointer;

    &--active {
      background: gc(brand);
      color: gc(bg);
    }
  }
}

// Tooltip component
.tooltip {
  @include transition(fast);
  @include ui-text(small);

  background: gc(c3);
  color: gc(bg);
  height: 24px;
  line-height: 24px;
  padding: 0 $size---padding / 2;
  position: absolute;
  right: 0;
  top: 100%;
  margin-top: 10px;
  white-space: nowrap;
  z-index: 5;
  opacity: 0;
  pointer-events: none;

  &:before {
    content: '';
    display: block;
    border-top: 0;
    border-right: 6px solid transparent;
    border-left: 6px solid transparent;
    border-bottom: 6px solid gc(c3);
    position: absolute;
    top: -6px;
    right: 32px;
    transform: translateX(50%);
  }

  &--error {
    background: gc(error);

    &:before {
      border-bottom-color: gc(error);
    }
  }

  @at-root .input:invalid:not(:focus).ng-touched ~ & {
    opacity: 1;
    pointer-events: initial;
    transition-delay: 0.3s;
  }

  &--center,
  &--center:before {
    right: 50%;
    transform: translateX(50%);
  }

  &--visible {
    opacity: 1;
    pointer-events: initial;
    transition-delay: 0.3s;
  }

  &-wrapper {
    position: relative;
  }
}
